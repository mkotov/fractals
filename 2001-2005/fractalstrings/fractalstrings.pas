program FractStr2;
(*
 ФРАКТАЛЬНЫЕ СТРОКИ
 (построение системы итерируемых функций по введенной строки)
 (c)Котов Матвей, 2006    (Создан: 19 АВГ 2006)
 email: ilab24@narod.ru
 http://fractalworld.narod.ru/
 компилятор: Free Pascal Compiler v. 2.0.0 (исп. -Sc)

 Реализованы следующие символы:
  !"#$% '()*+,-./0123456789:;<=>?
 ABCDEFGHIJKLMNOPQRSTUVWXYZ@[\]^_`~{|}
 АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ
 При этом строчые буквы неотличимы от прописных,
 пробел присутствует
*)

uses CRT;

const
    Step         = 0.2;
    Height       = 1.2;
    QuanTriangle = 292;

type
    TReal     = Real;
    TSgnInt   = Integer;
    TUnSgnInt = Word;
    TTriangle = array [1..6] of TReal;
    TTriangles= array [0..QuanTriangle] of TTriangle;
    TLetter   = record
        B : TUnSgnInt;
        E : TUnSgnInt;
        W : TReal
    end; {type TNumber}
    TLetters  = array [Char] of TLetter;
    TTransform = record
        a, b, c, d, e, f, p : TReal
    end;
    TTransforms = array of TTransform;
    TErrCode = Integer;
    TName = ShortString;
    TFileName = ShortString;
    TTextLine = ShortString;
    TLengthLine = Word;
    TRequest = Char;
    TIFSFile = Text;

const
    ERR_NO_ERROR = 0;
    ERR_EMPTY_LINE = 1;
    ERR_OPEN_FILE  = 3;

    Triangles : TTriangles = (
        (0.0, 1.0, 0.0, 0.0, 1.0, 0.0), { 1 Sqr }
        (0.0, 0.0, 0.2, 0.0, 0.5, 1.0), { 1 cyrА, latA }
        (0.5, 1.0, 0.3, 1.0, 0.6, 0.0), { 2 }
        (0.2, 0.3, 0.2, 0.1, 0.6, 0.1), { 3 }
        (0.0, 0.0, 0.0, 0.0, 0.0, 0.0), { Rezerv }
        (0.0, 0.0, 0.2, 0.0, 0.2, 1.0), { 1 cyrБ }
        (0.4, 0.0, 0.6, 0.0, 0.6, 0.6), { 2 }
        (0.2, 1.0, 0.2, 0.8, 0.6, 0.8), { 3 }
        (0.2, 0.6, 0.2, 0.4, 0.4, 0.4), { 4 }
        (0.2, 0.2, 0.2, 0.0, 0.4, 0.0), { 5 }
        (0.0, 0.0, 0.2, 0.0, 0.2, 1.0), { 1 cyrB, latB }
        (0.4, 0.0, 0.6, 0.0, 0.6, 0.8), { 2 }
        (0.2, 1.0, 0.2, 0.8, 0.5, 0.8), { 3 }
        (0.2, 0.6, 0.2, 0.4, 0.4, 0.4), { 4 }
        (0.2, 0.2, 0.2, 0.0, 0.4, 0.0), { 5 }
        (0.0, 0.0, 0.2, 0.0, 0.2, 1.0), { 1 cyrГ }
        (0.2, 1.0, 0.2, 0.8, 0.6, 0.8), { 2 }
        (0.2, 1.0, 0.2, 0.8, 0.5, 0.8), { 1 cyrД }
        (0.1, 0.2, 0.3, 0.2, 0.3, 0.8), { 2 }
        (0.5, 0.2, 0.7, 0.2, 0.7, 1.0), { 3 } 
        (0.0, 0.2, 0.0, 0.0, 0.8, 0.0), { 4 } 
        (0.0, 0.0, 0.2, 0.0, 0.2, 1.0), { 1 cyrЕ, latE }
        (0.2, 1.0, 0.2, 0.8, 0.6, 0.8), { 2 }
        (0.2, 0.6, 0.2, 0.4, 0.6, 0.4), { 3 }
        (0.2, 0.2, 0.2, 0.0, 0.6, 0.0), { 4 }
        (0.0, 0.0, 0.2, 0.0, 0.2, 0.8), { 1 cyrЁ }
        (0.2, 0.8, 0.2, 0.6, 0.6, 0.6), { 2 }
        (0.2, 0.5, 0.2, 0.3, 0.6, 0.3), { 3 }
        (0.2, 0.2, 0.2, 0.0, 0.6, 0.0), { 4 }
        (0.0, 1.0, 0.0, 0.9, 0.2, 0.9), { 5 }
        (0.4, 1.0, 0.4, 0.9, 0.6, 0.9), { 6 }
        (0.2, 1.0, 0.0, 1.0, 0.2, 0.5), { 1 cyrЖ }
        (0.2, 0.0, 0.0, 0.0, 0.2, 0.5), { 2 }
        (0.4, 0.0, 0.6, 0.0, 0.6, 1.0), { 3 }
        (0.8, 0.0, 1.0, 0.0, 0.8, 0.5), { 5 }
        (0.8, 1.0, 1.0, 1.0, 0.8, 0.5), { 6 }
        (0.0, 1.0, 0.0, 0.8, 0.4, 0.8), { 1 cyrЗ, num3 }
        (0.0, 0.6, 0.0, 0.4, 0.4, 0.4), { 2 }
        (0.0, 0.2, 0.0, 0.0, 0.4, 0.0), { 3 }
        (0.4, 0.6, 0.6, 0.6, 0.6, 0.9), { 4 }
        (0.4, 0.1, 0.6, 0.1, 0.6, 0.4), { 5 }
        (0.0, 0.0, 0.2, 0.0, 0.2, 1.0), { 1 cyrИ }
        (0.5, 0.0, 0.7, 0.0, 0.7, 1.0), { 2 }
        (0.2, 0.4, 0.2, 0.1, 0.5, 0.6), { 3 } 
        (0.0, 0.0, 0.2, 0.0, 0.2, 0.8), { 1 cyrЙ }
        (0.5, 0.0, 0.7, 0.0, 0.7, 0.8), { 2 }
        (0.2, 0.4, 0.2, 0.1, 0.5, 0.4), { 3 }
        (0.1, 1.0, 0.1, 0.9, 0.6, 0.9), { 4 }
        (0.0, 0.0, 0.2, 0.0, 0.2, 1.0), { 1 cyrК, latK }
        (0.2, 0.5, 0.4, 0.5, 0.7, 1.0), { 2 }
        (0.5, 0.0, 0.7, 0.0, 0.4, 0.5), { 3 }
        (0.0, 0.0, 0.2, 0.0, 0.2, 0.8), { 1 cyrЛ }
        (0.4, 0.0, 0.6, 0.0, 0.6, 1.0), { 2 }
        (0.1, 1.0, 0.1, 0.8, 0.4, 0.8), { 3 }
        (0.2, 0.0, 0.0, 0.0, 0.2, 1.0), { 1 cyrМ, latM }
        (0.4, 1.0, 0.2, 1.0, 0.4, 0.0), { 2 }
        (0.6, 0.0, 0.4, 0.0, 0.6, 1.0), { 3 } 
        (0.8, 1.0, 0.6, 1.0, 0.8, 0.0), { 4 }
        (0.0, 0.0, 0.2, 0.0, 0.2, 1.0), { 1 cyrН, latH }
        (0.5, 0.0, 0.7, 0.0, 0.7, 1.0), { 2 }
        (0.2, 0.6, 0.2, 0.4, 0.5, 0.4), { 3 }
        (0.0, 0.2, 0.2, 0.2, 0.2, 0.8), { 1 cyrО, latO, num0 }
        (0.6, 0.2, 0.8, 0.2, 0.8, 0.8), { 2 }
        (0.1, 0.2, 0.1, 0.0, 0.7, 0.0), { 3 }
        (0.1, 1.0, 0.1, 0.8, 0.7, 0.8), { 4 }
        (0.0, 0.0, 0.2, 0.0, 0.2, 1.0), { 1 cyrП }
        (0.5, 0.0, 0.7, 0.0, 0.7, 1.0), { 2 }
        (0.2, 1.0, 0.2, 0.8, 0.5, 0.8), { 3 }
        (0.0, 0.0, 0.2, 0.0, 0.2, 1.0), { 1 cyrР, latP }
        (0.2, 1.0, 0.2, 0.8, 0.6, 0.8), { 2 }
        (0.2, 0.6, 0.2, 0.4, 0.6, 0.4), { 3 }
        (0.4, 0.8, 0.4, 0.6, 0.6, 0.6), { 4 }
        (0.0, 0.2, 0.2, 0.2, 0.2, 0.8), { 1 cyrС, latC }
        (0.1, 0.2, 0.1, 0.0, 0.6, 0.0), { 2 }
        (0.1, 1.0, 0.1, 0.8, 0.6, 0.8), { 3 }
        (0.0, 1.0, 0.0, 0.8, 0.8, 0.8), { 1 cyrТ, latT }
        (0.3, 0.0, 0.5, 0.0, 0.5, 0.8), { 2 }
        (0.0, 0.4, 0.2, 0.4, 0.2, 1.0), { 1 cyrУ }
        (0.4, 0.0, 0.6, 0.0, 0.6, 1.0), { 2 }
        (0.2, 0.6, 0.2, 0.4, 0.4, 0.4), { 3 }
        (0.0, 0.2, 0.0, 0.0, 0.4, 0.0), { 4 }
        (0.0, 0.4, 0.2, 0.4, 0.2, 1.0), { 1 cyrФ }
        (0.4, 0.0, 0.6, 0.0, 0.6, 1.0), { 2 }
        (0.2, 0.6, 0.2, 0.4, 0.4, 0.4), { 3 }
        (0.2, 1.0, 0.2, 0.8, 0.4, 0.8), { 4 }
        (0.6, 0.6, 0.6, 0.4, 0.8, 0.4), { 5 }
        (0.6, 1.0, 0.6, 0.8, 0.8, 0.8), { 6 }
        (0.8, 0.4, 1.0, 0.4, 1.0, 1.0), { 7 }
        (0.2, 0.0, 0.0, 0.0, 0.6, 1.0), { 1 cyrХ, latX }
        (0.6, 0.0, 0.8, 0.0, 0.2, 1.0), { 2 }
        (0.0, 0.2, 0.2, 0.2, 0.2, 1.0), { 1 cyrЦ }
        (0.5, 0.2, 0.7, 0.2, 0.7, 1.0), { 2 }
        (0.0, 0.2, 0.0, 0.0, 0.8, 0.0), { 3 }
        (0.0, 0.4, 0.2, 0.4, 0.2, 1.0), { 1 cyrЧ }
        (0.4, 0.0, 0.6, 0.0, 0.6, 1.0), { 2 }
        (0.2, 0.6, 0.2, 0.4, 0.4, 0.4), { 3 }
        (0.0, 0.2, 0.2, 0.2, 0.2, 1.0), { 1 cyrШ }
        (0.4, 0.2, 0.6, 0.2, 0.6, 1.0), { 2 }
        (0.8, 0.2, 1.0, 0.2, 1.0, 1.0), { 3 }
        (0.0, 0.2, 0.0, 0.0, 1.0, 0.0), { 4 }
        (0.0, 0.2, 0.2, 0.2, 0.2, 1.0), { 1 cyrЩ }
        (0.3, 0.2, 0.5, 0.2, 0.5, 1.0), { 2 }
        (0.6, 0.2, 0.8, 0.2, 0.8, 1.0), { 3 }
        (0.0, 0.2, 0.0, 0.0, 1.0, 0.0), { 4 }
        (0.0, 1.0, 0.0, 0.8, 0.2, 0.8), { 1 cyrЪ }
        (0.2, 0.0, 0.4, 0.0, 0.4, 1.0), { 2 }
        (0.4, 0.6, 0.4, 0.4, 0.8, 0.4), { 3 }
        (0.4, 0.2, 0.4, 0.0, 0.8, 0.0), { 4 }
        (0.6, 0.2, 0.8, 0.2, 0.8, 0.4), { 5 }
        (0.0, 0.0, 0.2, 0.0, 0.2, 1.0), { 1 cyrЫ }
        (0.2, 0.6, 0.2, 0.4, 0.6, 0.4), { 2 }
        (0.2, 0.2, 0.2, 0.0, 0.6, 0.0), { 3 }
        (0.4, 0.2, 0.6, 0.2, 0.6, 0.4), { 4 }
        (0.7, 0.0, 0.9, 0.0, 0.9, 1.0), { 5 }
        (0.0, 0.0, 0.2, 0.0, 0.2, 1.0), { 1 cyrЬ }
        (0.2, 0.6, 0.2, 0.4, 0.6, 0.4), { 2 }
        (0.2, 0.2, 0.2, 0.0, 0.6, 0.0), { 3 }
        (0.4, 0.2, 0.6, 0.2, 0.6, 0.4), { 4 }
        (0.0, 1.0, 0.0, 0.8, 0.4, 0.8), { 1 cyrЭ }
        (0.0, 0.6, 0.0, 0.4, 0.4, 0.4), { 2 }
        (0.0, 0.2, 0.0, 0.0, 0.4, 0.0), { 3 }
        (0.4, 0.1, 0.6, 0.1, 0.6, 0.9), { 4 }
        (0.0, 0.0, 0.2, 0.0, 0.2, 1.0), { 1 cyrЮ }
        (0.4, 0.0, 0.6, 0.0, 0.6, 1.0), { 2 }
        (0.8, 0.0, 1.0, 0.0, 1.0, 1.0), { 3 }
        (0.2, 0.6, 0.2, 0.4, 0.4, 0.4), { 4 }
        (0.6, 1.0, 0.6, 0.8, 0.8, 0.8), { 5 }
        (0.6, 0.2, 0.6, 0.0, 0.8, 0.0), { 6 }
        (0.0, 0.4, 0.2, 0.4, 0.2, 1.0), { 1 cyrЯ }
        (0.4, 0.0, 0.6, 0.0, 0.6, 1.0), { 2 }
        (0.2, 0.6, 0.2, 0.4, 0.4, 0.4), { 3 }
        (0.2, 0.0, 0.0, 0.0, 0.2, 0.4), { 4 }
        (0.2, 1.0, 0.2, 0.8, 0.4, 0.8), { 5 }
        (0.2, 0.0, 0.0, 0.0, 0.2, 0.4), { 1 "," }
        (0.0, 0.2, 0.0, 0.0, 0.2, 0.0), { 1 "!" }
        (0.0, 0.4, 0.2, 0.4, 0.2, 1.0), { 2 }
        (0.0, 0.0, 0.2, 0.0, 0.2, 1.0), { 1 latD }
        (0.6, 0.2, 0.8, 0.2, 0.8, 0.8), { 2 }
        (0.2, 0.2, 0.2, 0.0, 0.7, 0.0), { 3 }
        (0.2, 1.0, 0.2, 0.8, 0.7, 0.8), { 4 }
        (0.0, 0.0, 0.2, 0.0, 0.2, 1.0), { 1 latF }
        (0.2, 1.0, 0.2, 0.8, 0.6, 0.8), { 2 }
        (0.2, 0.6, 0.2, 0.4, 0.6, 0.4), { 3 }
        (0.0, 0.2, 0.2, 0.2, 0.2, 0.8), { 1 latG }
        (0.1, 0.2, 0.1, 0.0, 0.6, 0.0), { 2 }
        (0.1, 1.0, 0.1, 0.8, 0.6, 0.8), { 3 }
        (0.4, 0.2, 0.6, 0.2, 0.6, 0.4), { 4 }
        (0.0, 0.0, 0.2, 0.0, 0.2, 1.0), { 1 latI }
        (0.0, 1.0, 0.0, 0.8, 0.4, 0.8), { 1 latJ }
        (0.0, 0.2, 0.0, 0.0, 0.3, 0.0), { 2 }
        (0.2, 0.2, 0.4, 0.2, 0.4, 0.8), { 3 }
        (0.0, 0.0, 0.2, 0.0, 0.2, 1.0), { 1 latL }
        (0.2, 0.2, 0.2, 0.0, 0.6, 0.0), { 2 }
        (0.0, 0.0, 0.2, 0.0, 0.2, 1.0), { 1 latN }
        (0.5, 0.0, 0.7, 0.0, 0.7, 1.0), { 2 }
        (0.2, 0.6, 0.2, 0.9, 0.5, 0.4), { 3 }
        (0.0, 0.2, 0.2, 0.2, 0.2, 0.8), { 1 latQ }
        (0.6, 0.2, 0.8, 0.2, 0.8, 0.8), { 2 }
        (0.1, 0.2, 0.1, 0.0, 0.7, 0.0), { 3 }
        (0.1, 1.0, 0.1, 0.8, 0.7, 0.8), { 4 }
        (0.5, 0.2, 0.5, 0.4, 0.9, 0.2), { 5 }
        (0.0, 0.0, 0.2, 0.0, 0.2, 1.0), { 1 latR }
        (0.2, 1.0, 0.2, 0.8, 0.6, 0.8), { 2 }
        (0.2, 0.6, 0.2, 0.4, 0.6, 0.4), { 3 }
        (0.4, 0.8, 0.4, 0.6, 0.6, 0.6), { 4 }
        (0.4, 0.4, 0.2, 0.4, 0.4, 0.0), { 5 }
        (0.1, 1.0, 0.1, 0.8, 0.6, 0.8), { 1 latS }
        (0.1, 0.6, 0.1, 0.4, 0.5, 0.4), { 2 }
        (0.0, 0.2, 0.0, 0.0, 0.5, 0.0), { 3 }
        (0.0, 0.6, 0.2, 0.6, 0.2, 0.8), { 4 }
        (0.4, 0.2, 0.6, 0.2, 0.6, 0.4), { 5 }
        (0.0, 0.2, 0.2, 0.2, 0.2, 1.0), { 1 latU }
        (0.6, 0.2, 0.8, 0.2, 0.8, 1.0), { 2 }
        (0.1, 0.2, 0.1, 0.0, 0.7, 0.0), { 3 }
        (0.2, 1.0, 0.0, 1.0, 0.3, 0.0), { 1 latV }
        (0.3, 0.0, 0.5, 0.0, 0.8, 1.0), { 2 }
        (0.2, 1.0, 0.0, 1.0, 0.2, 0.0), { 1 latW }
        (0.2, 0.0, 0.4, 0.0, 0.6, 1.0), { 2 }
        (0.6, 1.0, 0.4, 1.0, 0.6, 0.0), { 3 }
        (0.8, 0.0, 0.6, 0.0, 0.8, 1.0), { 4 }
        (0.2, 1.0, 0.0, 1.0, 0.3, 0.4), { 1 latY }
        (0.5, 0.4, 0.3, 0.4, 0.6, 1.0), { 2 }
        (0.5, 0.0, 0.3, 0.0, 0.3, 0.4), { 3 }
        (0.0, 1.0, 0.0, 0.8, 0.8, 0.8), { 1 latZ }
        (0.0, 0.2, 0.0, 0.0, 0.8, 0.0), { 2 }
        (0.2, 0.2, 0.0, 0.2, 0.6, 0.8), { 3 }
        (0.2, 0.0, 0.4, 0.0, 0.4, 1.0), { 1 num1 }
        (0.0, 0.8, 0.0, 0.6, 0.2, 0.8), { 2 }
        (0.0, 1.0, 0.0, 0.8, 0.5, 0.8), { 1 num2 } 
        (0.4, 0.6, 0.6, 0.6, 0.6, 0.8), { 2 }
        (0.2, 0.2, 0.0, 0.2, 0.4, 0.6), { 3 }
        (0.0, 0.2, 0.0, 0.0, 0.6, 0.0), { 4 }
        (0.0, 0.4, 0.2, 0.4, 0.4, 1.0), { 1 num4 }
        (0.4, 0.0, 0.6, 0.0, 0.6, 1.0), { 2 } 
        (0.2, 0.6, 0.2, 0.4, 0.4, 0.4), { 3 }
        (0.0, 1.0, 0.0, 0.8, 0.6, 0.8), { 1 num5 }
        (0.0, 0.6, 0.0, 0.4, 0.5, 0.4), { 2 }
        (0.0, 0.2, 0.0, 0.0, 0.5, 0.0), { 3 }
        (0.0, 0.6, 0.2, 0.6, 0.2, 0.8), { 4 }
        (0.4, 0.2, 0.6, 0.2, 0.6, 0.4), { 5 }
        (0.0, 0.6, 0.0, 0.4, 0.5, 0.4), { 1 num6 }
        (0.1, 0.2, 0.1, 0.0, 0.5, 0.0), { 2 } 
        (0.0, 0.6, 0.2, 0.6, 0.6, 1.0), { 3 }
        (0.4, 0.2, 0.6, 0.2, 0.6, 0.4), { 4 }
        (0.0, 0.2, 0.2, 0.2, 0.2, 0.4), { 5 }
        (0.0, 1.0, 0.0, 0.8, 0.6, 0.8), { 1 num7 }
        (0.2, 0.0, 0.0, 0.0, 0.4, 0.8), { 2 }
        (0.1, 1.0, 0.1, 0.8, 0.5, 0.8), { 1 num8 }
        (0.1, 0.6, 0.1, 0.4, 0.5, 0.4), { 2 } 
        (0.1, 0.2, 0.1, 0.0, 0.5, 0.0), { 3 }
        (0.4, 0.6, 0.6, 0.6, 0.6, 0.8), { 4 }
        (0.4, 0.2, 0.6, 0.2, 0.6, 0.4), { 5 }
        (0.0, 0.6, 0.2, 0.6, 0.2, 0.8), { 6 }
        (0.0, 0.2, 0.2, 0.2, 0.2, 0.4), { 7 }
        (0.1, 1.0, 0.1, 0.8, 0.5, 0.8), { 1 num9 }
        (0.1, 0.6, 0.1, 0.4, 0.6, 0.4), { 2 }
        (0.4, 0.6, 0.6, 0.6, 0.6, 0.8), { 3 }
        (0.0, 0.6, 0.2, 0.6, 0.2, 0.8), { 4 }
        (0.2, 0.0, 0.0, 0.0, 0.4, 0.4), { 5 }
        (0.4, 0.7, 0.4, 0.3, 1.0, 0.3), { 1 "@" }
        (0.8, 0.7, 1.0, 0.7, 1.0, 0.9), { 2 }
        (0.1, 1.0, 0.1, 0.8, 0.8, 0.8), { 3 }
        (0.0, 0.1, 0.2, 0.1, 0.2, 0.8), { 4 }
        (0.2, 0.2, 0.2, 0.0, 0.9, 0.0), { 5 }
        (0.0, 0.2, 0.0, 0.0, 0.2, 0.0), { 1 "." }
        (0.0, 0.6, 0.2, 0.6, 0.2, 1.0), { 1 """ }
        (0.4, 0.6, 0.6, 0.6, 0.6, 1.0), { 2 }
        (0.2, 0.0, 0.4, 0.0, 0.4, 1.0), { 1 "#" }
        (0.6, 0.0, 0.8, 0.0, 0.8, 1.0), { 2 }
        (0.0, 0.8, 0.0, 0.6, 1.0, 0.6), { 3 }
        (0.0, 0.4, 0.0, 0.2, 1.0, 0.2), { 4 }
        (0.1, 0.9, 0.1, 0.8, 0.6, 0.8), { 1 "$" }
        (0.1, 0.6, 0.1, 0.4, 0.5, 0.4), { 2 }
        (0.0, 0.2, 0.0, 0.1, 0.5, 0.1), { 3 }
        (0.0, 0.6, 0.2, 0.6, 0.2, 0.8), { 4 }
        (0.4, 0.2, 0.6, 0.2, 0.6, 0.4), { 5 }
        (0.2, 1.0, 0.2, 0.9, 0.4, 0.9), { 6 }
        (0.2, 0.1, 0.2, 0.0, 0.4, 0.0), { 7 }
        (0.0, 1.0, 0.0, 0.8, 0.2, 0.8), { 1 "%" }
        (0.6, 0.2, 0.6, 0.0, 0.8, 0.0), { 2 }
        (0.2, 0.0, 0.0, 0.0, 0.6, 1.0), { 3 }
        (0.2, 0.6, 0.0, 0.6, 0.2, 1.0), { 1 "'" }
        (0.0, 0.2, 0.2, 0.2, 0.2, 0.8), { 1 "(" }
        (0.1, 0.2, 0.1, 0.0, 0.3, 0.0), { 2 }
        (0.1, 1.0, 0.1, 0.8, 0.3, 0.8), { 3 }
        (0.1, 0.2, 0.3, 0.2, 0.3, 0.8), { 1 ")" }
        (0.0, 0.2, 0.0, 0.0, 0.2, 0.0), { 2 }
        (0.0, 1.0, 0.0, 0.8, 0.2, 0.8), { 3 }
        (0.0, 0.6, 0.0, 0.4, 1.0, 0.4), { 1 "*" }
        (0.4, 1.0, 0.2, 1.0, 0.7, 0.0), { 2 }
        (0.6, 1.0, 0.8, 1.0, 0.4, 0.0), { 3 }
        (0.0, 0.6, 0.0, 0.4, 1.0, 0.4), { 1 "+" }
        (0.4, 0.0, 0.6, 0.0, 0.6, 1.0), { 2 }
        (0.0, 0.6, 0.0, 0.4, 1.0, 0.4), { 1 "-" }
        (0.4, 1.0, 0.6, 1.0, 0.2, 0.0), { 1 "/" }
        (0.0, 0.2, 0.0, 0.0, 0.2, 0.0), { 1 ":" }
        (0.0, 1.0, 0.0, 0.8, 0.2, 0.8), { 2 }
        (0.2, 0.4, 0.0, 0.0, 0.2, 0.0), { 1 ";" }
        (0.2, 1.0, 0.2, 0.8, 0.4, 0.8), { 2 }
        (0.0, 0.8, 0.0, 0.6, 1.0, 0.6), { 1 "=" }
        (0.0, 0.4, 0.0, 0.2, 1.0, 0.2), { 2 }
        (0.2, 0.5, 0.0, 0.5, 0.4, 1.0), { 1 "<" }
        (0.2, 0.5, 0.0, 0.5, 0.4, 0.0), { 2 }
        (0.4, 0.5, 0.6, 0.5, 0.2, 1.0), { 1 ">" }
        (0.4, 0.5, 0.6, 0.5, 0.2, 0.0), { 2 }
        (0.1, 1.0, 0.1, 0.8, 0.5, 0.8), { 1 "?" }
        (0.0, 0.6, 0.2, 0.6, 0.2, 0.8), { 3 }
        (0.4, 0.6, 0.6, 0.6, 0.6, 0.8), { 4 }
        (0.2, 0.3, 0.4, 0.3, 0.6, 0.6), { 5 }
        (0.2, 0.2, 0.2, 0.0, 0.4, 0.0), { 6 }
        (0.0, 0.2, 0.2, 0.2, 0.2, 0.8), { 1 "[" }
        (0.0, 0.2, 0.0, 0.0, 0.3, 0.0), { 2 }
        (0.0, 1.0, 0.0, 0.8, 0.3, 0.8), { 3 }
        (0.1, 0.2, 0.3, 0.2, 0.3, 0.8), { 1 "]" }
        (0.0, 0.2, 0.0, 0.0, 0.3, 0.0), { 2 }
        (0.0, 1.0, 0.0, 0.8, 0.3, 0.8), { 3 }
        (0.2, 1.0, 0.0, 1.0, 0.4, 0.0), { 1 "\" }
        (0.0, 0.8, 0.0, 0.6, 0.3, 0.8), { 1 "^" }
        (0.3, 1.0, 0.3, 0.8, 0.6, 0.6), { 2 }
        (0.0, 0.2, 0.0, 0.0, 1.0, 0.0), { 1 "_" }
        (0.2, 1.0, 0.0, 1.0, 0.2, 0.8), { 1 "`" }
        (0.1, 0.2, 0.3, 0.2, 0.3, 0.8), { 1 "{" }
        (0.2, 0.2, 0.2, 0.0, 0.4, 0.0), { 2 }
	(0.2, 1.0, 0.2, 0.8, 0.4, 0.8), { 3 }
        (0.0, 0.4, 0.1, 0.4, 0.1, 0.6), { 4 }
        (0.1, 0.2, 0.3, 0.2, 0.3, 0.8), { 1 "}" }
        (0.0, 0.2, 0.0, 0.0, 0.2, 0.0), { 2 }
        (0.0, 1.0, 0.0, 0.8, 0.2, 0.8), { 3 }
        (0.3, 0.4, 0.4, 0.4, 0.4, 0.6), { 4 }
        (0.2, 0.0, 0.0, 0.0, 0.0, 1.0), { 1 "|" }
        (0.0, 0.8, 0.0, 0.6, 0.3, 0.8), { 1 "~" }
        (0.3, 1.0, 0.3, 0.8, 0.7, 0.6), { 2 }
        (0.7, 0.8, 0.7, 0.6, 1.0, 0.8)  { 3 } 
    );

    { Предполагается кодировка cp1251 }
    Letters : TLetters = (
        (B:   0; E:   0; W: 1.0),
        ... { на месте многоточий находятся строки (B:   0; E:   0; W: 1.0) }
        (B:   0; E:  -1; W: 0.4),  { 32 -- " " }
        (B: 134; E: 135; W: 0.2),  { 33 -- "!" }
        (B: 225; E: 226; W: 0.6),  { 34 -- """ }
        (B: 227; E: 230; W: 1.0),  { 35 -- "#" }
        (B: 231; E: 237; W: 0.6),  { 36 -- "$" }
        (B: 238; E: 240; W: 0.8),  { 37 -- "%" }
        (B:   0; E:   0; W: 1.0),  
        (B: 241; E: 241; W: 0.4),  { 39 -- "'" }
        (B: 242; E: 244; W: 0.3),  { 40 -- "(" }
        (B: 245; E: 247; W: 0.3),  { 41 -- ")" }
        (B: 248; E: 250; W: 1.0),  { 42 -- "*" }
        (B: 251; E: 252; W: 1.0),  { 43 -- "+" }
        (B: 133; E: 133; W: 0.4),  { 44 -- "," }
        (B: 253; E: 253; W: 1.0),  { 45 -- "-" }
        (B: 224; E: 224; W: 0.2),  { 46 -- "." }
        (B: 254; E: 254; W: 0.6),  { 47 -- "/" }
        (B:  61; E:  64; W: 0.8),  { 48 -- num0 }
        (B: 186; E: 187; W: 0.4),  { 49 -- num1 }
        (B: 188; E: 191; W: 0.6),  { 50 -- num2 }
        (B:  36; E:  40; W: 0.6),  { 51 -- num3 }
        (B: 192; E: 194; W: 0.6),  { 52 -- num4 }
        (B: 195; E: 199; W: 0.6),  { 53 -- num5 }
        (B: 200; E: 204; W: 0.6),  { 54 -- num6 }
        (B: 205; E: 206; W: 0.6),  { 55 -- num7 }
        (B: 207; E: 213; W: 0.5),  { 56 -- num8 }
        (B: 214; E: 218; W: 0.6),  { 57 -- num9 }
        (B: 255; E: 256; W: 0.2),  { 58 -- ":" }
        (B: 257; E: 258; W: 0.4),  { 59 -- ";" }
        (B: 261; E: 262; W: 0.6),  { 60 -- "<" }
        (B: 259; E: 260; W: 1.0),  { 61 -- "=" }
        (B: 263; E: 264; W: 0.6),  { 62 -- ">" }
        (B: 265; E: 269; W: 0.6),  { 63 -- "?" }
        (B: 219; E: 223; W: 1.0),  { 64 -- "@" }
        (B:   1; E:   3; W: 0.8),  { 65 -- latA }
        (B:  10; E:  14; W: 0.6),  { 66 -- latB }
        (B:  72; E:  74; W: 0.6),  { 67 -- latC }
        (B: 136; E: 139; W: 0.8),  { 68 -- latD }
        (B:  21; E:  24; W: 0.6),  { 69 -- latE }
        (B: 140; E: 142; W: 0.6),  { 70 -- latF }
        (B: 143; E: 146; W: 0.6),  { 71 -- latG }
        (B:  58; E:  60; W: 0.7),  { 72 -- latH }
        (B: 147; E: 147; W: 0.2),  { 73 -- latI }
        (B: 148; E: 150; W: 0.4),  { 74 -- latJ }
        (B:  48; E:  50; W: 0.7),  { 75 -- latK }
        (B: 151; E: 152; W: 0.6),  { 76 -- latL }
        (B:  54; E:  57; W: 1.0),  { 77 -- latM }
        (B: 153; E: 155; W: 0.7),  { 78 -- latN }
        (B:  61; E:  64; W: 0.8),  { 79 -- latO }
        (B:  68; E:  71; W: 0.6),  { 80 -- latP }
        (B: 156; E: 160; W: 0.9),  { 81 -- latQ }
        (B: 161; E: 165; W: 0.6),  { 82 -- latR }
        (B: 166; E: 170; W: 0.6),  { 83 -- latS }
        (B:  75; E:  76; W: 0.8),  { 84 -- latT }
        (B: 171; E: 173; W: 0.8),  { 85 -- latU }
        (B: 174; E: 175; W: 0.8),  { 86 -- latV }
        (B: 176; E: 179; W: 1.0),  { 87 -- latW }
        (B:  88; E:  89; W: 0.8),  { 88 -- latX }
        (B: 180; E: 182; W: 0.8),  { 89 -- latY }
        (B: 183; E: 185; W: 0.8),  { 90 -- latZ }
        (B: 270; E: 272; W: 0.3),  { 91 -- "[" }
        (B: 276; E: 276; W: 0.6),  { 62 -- "/" }
        (B: 273; E: 275; W: 0.3),  { 93 -- "]" }
        (B: 277; E: 278; W: 0.6),  { 94 -- "^" }
        (B: 279; E: 279; W: 1.0),  { 95 -- "_" }
        (B: 280; E: 280; W: 0.8),  { 96 -- "`" }
        (B:   1; E:   3; W: 0.8),  { 97 -- lata }
        (B:  10; E:  14; W: 0.6),  { 98 -- latb }
        (B:  72; E:  74; W: 0.6),  { 99 -- latc } 
        (B: 136; E: 139; W: 0.8),  { 100 -- latd } 
        (B:  21; E:  24; W: 0.6),  { 101 -- late }
        (B: 140; E: 142; W: 0.6),  { 102 -- latf }
        (B: 143; E: 146; W: 0.6),  { 103 -- latg }
        (B:  58; E:  60; W: 0.7),  { 104 -- lath }
        (B: 147; E: 147; W: 0.2),  { 105 -- lati }
        (B: 148; E: 150; W: 0.4),  { 106 -- latj }
        (B:  48; E:  50; W: 0.7),  { 107 -- latk }
        (B: 151; E: 152; W: 0.6),  { 108 -- latl }
        (B:  54; E:  57; W: 1.0),  { 109 -- latm }
        (B: 153; E: 155; W: 0.7),  { 110 -- latn }
        (B:  61; E:  64; W: 0.8),  { 111 -- lato }
        (B:  68; E:  71; W: 0.6),  { 112 -- latp }
        (B: 156; E: 160; W: 0.9),  { 113 -- latq }
        (B: 161; E: 165; W: 0.6),  { 114 -- latr }
        (B: 166; E: 170; W: 0.6),  { 115 -- lats }
        (B:  75; E:  76; W: 0.8),  { 116 -- latt }
        (B: 171; E: 173; W: 0.8),  { 117 -- latu }
        (B: 174; E: 175; W: 0.8),  { 118 -- latv }
        (B: 176; E: 179; W: 1.0),  { 119 -- latw }
        (B:  88; E:  89; W: 0.8),  { 120 -- latx }
        (B: 180; E: 182; W: 0.8),  { 121 -- laty }
        (B: 183; E: 185; W: 0.8),  { 122 -- latz }
        (B: 281; E: 284; W: 0.4),  { 123 -- "{" }
        (B: 289; E: 289; W: 0.2),  { 124 -- "|" }
        (B: 285; E: 288; W: 0.4),  { 125 -- "}" }
        (B: 290; E: 292; W: 1.0),  { 126 -- "~" }
	...
        (B:  25; E:  30; W: 0.6),  { 168 -- Ё }
	...
        (B:  25; E:  30; W: 0.6),  { 184 -- curё }
	...
        (B:   1; E:   3; W: 0.8), { 192 -- cyrA }
        (B:   5; E:   9; W: 0.6), { 193 -- cyrБ }
        (B:  10; E:  14; W: 0.6), { 194 -- cyrВ }
        (B:  15; E:  16; W: 0.6), { 195 -- cyrГ }
        (B:  17; E:  20; W: 0.8), { 196 -- cyrД } 
        (B:  21; E:  24; W: 0.6), { 197 -- cyrЕ }
        (B:  31; E:  35; W: 1.0), { 198 -- cyrЖ }
        (B:  36; E:  40; W: 0.6), { 199 -- cyrЗ }
        (B:  41; E:  43; W: 0.7), { 200 -- cyrИ }
        (B:  44; E:  47; W: 0.7), { 201 -- cyrЙ }
        (B:  48; E:  50; W: 0.7), { 202 -- cyrК }
        (B:  51; E:  53; W: 0.6), { 203 -- cyrЛ }
        (B:  54; E:  57; W: 1.0), { 204 -- cyrМ }
        (B:  58; E:  60; W: 0.7), { 205 -- cyrН }
        (B:  61; E:  64; W: 0.8), { 206 -- cyrО }
        (B:  65; E:  67; W: 0.7), { 207 -- cyrП }
        (B:  68; E:  71; W: 0.6), { 208 -- cyrР }
        (B:  72; E:  74; W: 0.6), { 209 -- cyrС }
        (B:  75; E:  76; W: 0.8), { 210 -- cyrТ }
        (B:  77; E:  80; W: 0.6), { 211 -- cyrУ }
        (B:  81; E:  87; W: 1.0), { 212 -- cyrФ }
        (B:  88; E:  89; W: 0.8), { 213 -- cyrХ }
        (B:  90; E:  92; W: 0.8), { 214 -- cyrЦ }
        (B:  93; E:  95; W: 0.6), { 215 -- cyrЧ }
        (B:  96; E:  99; W: 1.0), { 216 -- cyrШ } 
        (B: 100; E: 103; W: 1.0), { 217 -- cyrЩ } 
        (B: 104; E: 108; W: 0.8), { 218 -- cyrЪ }
        (B: 109; E: 113; W: 0.9), { 219 -- cyrЫ }
        (B: 114; E: 117; W: 0.6), { 220 -- cyrЬ }
        (B: 118; E: 121; W: 0.6), { 221 -- cyrЭ }
        (B: 122; E: 127; W: 1.0), { 222 -- cyrЮ }
        (B: 128; E: 132; W: 0.6), { 223 -- cyrЯ }
        (B:   1; E:   3; W: 0.8), { 224 -- cyrа }
        (B:   5; E:   9; W: 0.6), { 225 -- cyrб }
        (B:  10; E:  14; W: 0.6), { 226 -- cyrв }
        (B:  15; E:  16; W: 0.6), { 227 -- cyrг }
        (B:  17; E:  20; W: 0.8), { 228 -- cyrд }
        (B:  21; E:  24; W: 0.6), { 229 -- cyrе }
        (B:  31; E:  35; W: 1.0), { 230 -- cyrж }
        (B:  36; E:  40; W: 0.6), { 231 -- cyrз }
        (B:  41; E:  43; W: 0.7), { 232 -- cyrи }
        (B:  44; E:  47; W: 0.7), { 233 -- cyrй } 
        (B:  48; E:  50; W: 0.7), { 234 -- cyrк } 
        (B:  51; E:  53; W: 0.6), { 235 -- cyrл }
        (B:  54; E:  57; W: 1.0), { 236 -- cyrм }
        (B:  58; E:  60; W: 0.7), { 237 -- cyrн }
        (B:  61; E:  64; W: 0.8), { 238 -- cyrо }
        (B:  65; E:  67; W: 0.7), { 239 -- cyrп }
        (B:  68; E:  71; W: 0.6), { 240 -- cyrр }
        (B:  72; E:  74; W: 0.6), { 241 -- cyrс }
        (B:  75; E:  76; W: 0.8), { 242 -- cyrт }
        (B:  77; E:  80; W: 0.6), { 243 -- cyrу }
        (B:  81; E:  87; W: 1.0), { 244 -- cyrф }
        (B:  88; E:  89; W: 0.8), { 245 -- cyrх }
        (B:  90; E:  92; W: 0.8), { 246 -- cyrц }
        (B:  93; E:  95; W: 0.6), { 247 -- cyrч }
        (B:  96; E:  99; W: 1.0), { 248 -- cyrш }
        (B: 100; E: 103; W: 1.0), { 249 -- cyrщ }
        (B: 104; E: 108; W: 0.8), { 250 -- cyrъ }
        (B: 109; E: 113; W: 0.9), { 251 -- cyrы } 
        (B: 114; E: 117; W: 0.6), { 252 -- cyrь }
        (B: 118; E: 121; W: 0.6), { 253 -- cyrэ }
        (B: 122; E: 127; W: 1.0), { 254 -- cyrю }
        (B: 128; E: 132; W: 0.6)  { 255 -- cyrя } 
    );

procedure Calc(
        TextLine   : TTextLine;
    var Transforms : TTransforms;
    var ErrCode    : TErrCode
    ); 

var
    i, k           : TUnSgnInt;
    j              : TUnSgnInt = 0;
    QuanTransforms : TUnSgnInt = 0;
    Width          : TReal = 0.0;
    Shift          : TReal = 0.0;
    Sump           : TReal = 0.0;
    Triangle       : TTriangle;
    LengthLine     : TLengthLine;

begin
    ErrCode := ERR_NO_ERROR;
    LengthLine := Length(TextLine);
    if LengthLine = 0 then
    begin
        ErrCode := ERR_EMPTY_LINE;
        Exit
    end;

    { Считаем количество необходимых преобразований и длину строки }
    for i := 1 to LengthLine do
    begin
        QuanTransforms += Letters[TextLine[i]].E - 
	                  Letters[TextLine[i]].B + 1;
        Width += Letters[TextLine[i]].W
    end;
    SetLength(Transforms, QuanTransforms);
    Width += Step * (LengthLine - 1);

    { Вычисляем сами преобразования }
    for i := 1 to LengthLine do
    begin
        QuanTransforms := Letters[TextLine[i]].E - 
	                  Letters[TextLine[i]].B + 1;
        for k := 1 to QuanTransforms do
        begin
            Triangle := Triangles[Letters[TextLine[i]].B + k - 1];
            with Transforms[j] do
            begin
                a := 1/Width * (-Triangle[3] + Triangle[5]);
                b := Triangle[1] - Triangle[3];
                e := 1/Width * (Triangle[3] + Shift);
                c := 1/Width * (-Triangle[4] + Triangle[6]);
                d := Triangle[2] - Triangle[4];
                f := 1/Width * (Triangle[4]);
                Sump += abs(a * d - b * c)
            end;
            j += 1
        end;
        Shift += Letters[TextLine[i]].W + Step
    end;

    { Расчитываем веротностные коэффициенты }
    QuanTransforms := Length(Transforms);
    for i := 0 to QuanTransforms - 1 do
        with Transforms[i] do
            p := abs(a * d - b * c) / Sump
end; { procedure Calc }


procedure Save(
    Name       : TName;
    FileName   : TFileName;
    Transforms : TTransforms;
    ErrCode    : TErrCode
    );

var
    IFSFile        : TIFSFile;
    QuanTransforms : TUnSgnInt;
    i              : TUnSgnInt;

begin
    ErrCode := ERR_NO_ERROR;
    Assign(IFSFile, FileName);
    {$I-}
    Rewrite(IFSFile);
    {$I+}
    if IOResult <> 0 then
    begin
        ErrCode := ERR_OPEN_FILE;
        Exit
    end;

    WriteLn(IFSFile, Name + ' {');

    QuanTransforms := Length(Transforms);
    for i := 0 to QuanTransforms - 1 do
    begin
        with Transforms[i] do
            WriteLn(IFSFile, a : 9 : 6, ' ', b : 9 : 6, ' ', c : 9 : 6, ' ', d : 9 : 6, ' ',
                    e : 9 : 6, ' ', f : 9 : 6, ' ', p : 9 : 6)
    end;
    WriteLn(IFSFile, '}');
    Close(IFSFile);
end; { procedure Save }


var
    TextLine   : TTextLine;
    Transforms : TTransforms;
    Name       : TName;
    FileName   : TFileName;
    ErrCode    : TErrCode;

begin { program FractStr2 }
    WriteLn;
    Write('Введите строку: ');
    ReadLn(TextLine);
    Calc(TextLine, Transforms, ErrCode);
    if ErrCode = ERR_EMPTY_LINE then
    begin
        WriteLn('Ошибка! Введена пустая строка.');
        Halt
    end;

    Write('Введите имя файла: ');
    ReadLn(FileName);
    Write('Введите название СИФ (латинские буквы, цифры и'+
          ' символ "_"): ');
    ReadLn(Name);
    Save(Name, FileName, Transforms, ErrCode);
end. { program FractStr2 }

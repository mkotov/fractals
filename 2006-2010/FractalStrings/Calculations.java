package FractalStrings;

/**
 * Фрактальные строки
 * Файл содержит классы, необходимые для вычисления системы итерируемых функций 
 * по заданной строке
 * @author Котов Матвей
 * @version 1.0
 */

import java.util.*;

/** Аффинное преобразование + вероятностный коэффициент */
class Transform
{
        public double a;
        public double b;
        public double c;
        public double d;
        public double e;
        public double f;
        public double p;
}


/** Система аффинных преобразований */
class SystemOfTransforms
{
        public SystemOfTransforms(Transform[] transforms, double height)
        {
                this.transforms = transforms;
                this.height     = height;
        }
        
        public Transform[] transforms;
        public double       height;
}


/** Класс для вычисления системы аффинных преобразований по заданной строке */
class Calculator
{
        public Calculator()
        {
                letters.put(' ', new Letter(0.4, new double[][] {
                }));
                letters.put('!', new Letter(0.2, new double[][] {
                        {0.0, 0.2, 0.0, 0.0, 0.2, 0.0},
                        {0.0, 0.4, 0.2, 0.4, 0.2, 1.0}}));
                letters.put('"', new Letter(0.6, new double[][] {
                        {0.0, 0.6, 0.2, 0.6, 0.2, 1.0},
                        {0.4, 0.6, 0.6, 0.6, 0.6, 1.0}}));
                letters.put('#', new Letter(1.0, new double[][] {
                        {0.2, 0.0, 0.4, 0.0, 0.4, 1.0},
                        {0.6, 0.0, 0.8, 0.0, 0.8, 1.0},
                        {0.0, 0.8, 0.0, 0.6, 1.0, 0.6},
                        {0.0, 0.4, 0.0, 0.2, 1.0, 0.2}}));
                letters.put('$', new Letter(0.6, new double[][] {
                        {0.1, 0.9, 0.1, 0.8, 0.6, 0.8},
                        {0.1, 0.6, 0.1, 0.4, 0.5, 0.4},
                        {0.0, 0.2, 0.0, 0.1, 0.5, 0.1},
                        {0.0, 0.6, 0.2, 0.6, 0.2, 0.8},
                        {0.4, 0.2, 0.6, 0.2, 0.6, 0.4},
                        {0.2, 1.0, 0.2, 0.9, 0.4, 0.9},
                        {0.2, 0.1, 0.2, 0.0, 0.4, 0.0}}));
                letters.put('%', new Letter(0.8, new double[][] {
                        {0.0, 1.0, 0.0, 0.8, 0.2, 0.8},
                        {0.6, 0.2, 0.6, 0.0, 0.8, 0.0},
                        {0.2, 0.0, 0.0, 0.0, 0.6, 1.0}}));
                letters.put('\'', new Letter(0.4, new double[][] {
                        {0.2, 0.6, 0.0, 0.6, 0.2, 1.0}}));
                letters.put('(', new Letter(0.3, new double[][] {
                        {0.0, 0.2, 0.2, 0.2, 0.2, 0.8},
                        {0.1, 0.2, 0.1, 0.0, 0.3, 0.0},
                        {0.1, 1.0, 0.1, 0.8, 0.3, 0.8}}));
                letters.put(')', new Letter(0.3, new double[][] {
                        {0.1, 0.2, 0.3, 0.2, 0.3, 0.8},
                        {0.0, 0.2, 0.0, 0.0, 0.2, 0.0},
                        {0.0, 1.0, 0.0, 0.8, 0.2, 0.8}}));
                letters.put('*', new Letter(1.0, new double[][] {
                        {0.0, 0.6, 0.0, 0.4, 1.0, 0.4},
                        {0.4, 1.0, 0.2, 1.0, 0.7, 0.0},
                        {0.6, 1.0, 0.8, 1.0, 0.4, 0.0}}));
                letters.put('+', new Letter(1.0, new double[][] {
                        {0.0, 0.6, 0.0, 0.4, 1.0, 0.4},
                        {0.4, 0.0, 0.6, 0.0, 0.6, 1.0}}));
                letters.put(',', new Letter(0.4, new double[][] {
                        {0.2, 0.0, 0.0, 0.0, 0.2, 0.4}}));
                letters.put('-', new Letter(1.0, new double[][] {
                        {0.0, 0.6, 0.0, 0.4, 1.0, 0.4}}));
                letters.put('.', new Letter(0.2, new double[][] {
                        {0.0, 0.2, 0.0, 0.0, 0.2, 0.0}}));
                letters.put('/', new Letter(0.6, new double[][] {
                        {0.4, 1.0, 0.6, 1.0, 0.2, 0.0}}));
                letters.put('0', new Letter(0.8, new double[][] {
                        {0.0, 0.2, 0.2, 0.2, 0.2, 0.8},
                        {0.6, 0.2, 0.8, 0.2, 0.8, 0.8},
                        {0.1, 0.2, 0.1, 0.0, 0.7, 0.0},
                        {0.1, 1.0, 0.1, 0.8, 0.7, 0.8}}));
                letters.put('1', new Letter(0.4, new double[][] {
                        {0.2, 0.0, 0.4, 0.0, 0.4, 1.0},
                        {0.0, 0.8, 0.0, 0.6, 0.2, 0.8}}));
                letters.put('2', new Letter(0.6, new double[][] {
                        {0.0, 1.0, 0.0, 0.8, 0.5, 0.8},
                        {0.4, 0.6, 0.6, 0.6, 0.6, 0.8},
                        {0.2, 0.2, 0.0, 0.2, 0.4, 0.6},
                        {0.0, 0.2, 0.0, 0.0, 0.6, 0.0}}));
                letters.put('3', new Letter(0.6, new double[][] {
                        {0.0, 1.0, 0.0, 0.8, 0.4, 0.8},
                        {0.0, 0.6, 0.0, 0.4, 0.4, 0.4},
                        {0.0, 0.2, 0.0, 0.0, 0.4, 0.0},
                        {0.4, 0.6, 0.6, 0.6, 0.6, 0.9},
                        {0.4, 0.1, 0.6, 0.1, 0.6, 0.4}}));
                letters.put('4', new Letter(0.6, new double[][] {
                        {0.0, 0.4, 0.2, 0.4, 0.4, 1.0},
                        {0.4, 0.0, 0.6, 0.0, 0.6, 1.0},
                        {0.2, 0.6, 0.2, 0.4, 0.4, 0.4}}));
                letters.put('5', new Letter(0.6, new double[][] {
                        {0.0, 1.0, 0.0, 0.8, 0.6, 0.8},
                        {0.0, 0.6, 0.0, 0.4, 0.5, 0.4},
                        {0.0, 0.2, 0.0, 0.0, 0.5, 0.0},
                        {0.0, 0.6, 0.2, 0.6, 0.2, 0.8},
                        {0.4, 0.2, 0.6, 0.2, 0.6, 0.4}}));
                letters.put('6', new Letter(0.6, new double[][] {
                        {0.0, 0.6, 0.0, 0.4, 0.5, 0.4},
                        {0.1, 0.2, 0.1, 0.0, 0.5, 0.0},
                        {0.0, 0.6, 0.2, 0.6, 0.6, 1.0},
                        {0.4, 0.2, 0.6, 0.2, 0.6, 0.4},
                        {0.0, 0.2, 0.2, 0.2, 0.2, 0.4}}));
                letters.put('7', new Letter(0.6, new double[][] {
                        {0.0, 1.0, 0.0, 0.8, 0.6, 0.8},
                        {0.2, 0.0, 0.0, 0.0, 0.4, 0.8}}));
                letters.put('8', new Letter(0.5, new double[][] {
                        {0.1, 1.0, 0.1, 0.8, 0.5, 0.8},
                        {0.1, 0.6, 0.1, 0.4, 0.5, 0.4},
                        {0.1, 0.2, 0.1, 0.0, 0.5, 0.0},
                        {0.4, 0.6, 0.6, 0.6, 0.6, 0.8},
                        {0.4, 0.2, 0.6, 0.2, 0.6, 0.4},
                        {0.0, 0.6, 0.2, 0.6, 0.2, 0.8},
                        {0.0, 0.2, 0.2, 0.2, 0.2, 0.4}}));
                letters.put('9', new Letter(0.6, new double[][] {
                        {0.1, 1.0, 0.1, 0.8, 0.5, 0.8},
                        {0.1, 0.6, 0.1, 0.4, 0.6, 0.4},
                        {0.4, 0.6, 0.6, 0.6, 0.6, 0.8},
                        {0.0, 0.6, 0.2, 0.6, 0.2, 0.8},
                        {0.2, 0.0, 0.0, 0.0, 0.4, 0.4}}));
                letters.put(':', new Letter(0.2, new double[][] {
                        {0.0, 0.2, 0.0, 0.0, 0.2, 0.0},
                        {0.0, 1.0, 0.0, 0.8, 0.2, 0.8}}));
                letters.put(';', new Letter(0.4, new double[][] {
                        {0.2, 0.4, 0.0, 0.0, 0.2, 0.0},
                        {0.2, 1.0, 0.2, 0.8, 0.4, 0.8}}));
                letters.put('<', new Letter(0.6, new double[][] {
                        {0.2, 0.5, 0.0, 0.5, 0.4, 1.0},
                        {0.2, 0.5, 0.0, 0.5, 0.4, 0.0}}));
                letters.put('=', new Letter(1.0, new double[][] {
                        {0.0, 0.8, 0.0, 0.6, 1.0, 0.6},
                        {0.0, 0.4, 0.0, 0.2, 1.0, 0.2}}));
                letters.put('>', new Letter(0.6, new double[][] {
                        {0.4, 0.5, 0.6, 0.5, 0.2, 1.0},
                        {0.4, 0.5, 0.6, 0.5, 0.2, 0.0}}));
                letters.put('?', new Letter(0.6, new double[][] {
                        {0.1, 1.0, 0.1, 0.8, 0.5, 0.8},
                        {0.0, 0.6, 0.2, 0.6, 0.2, 0.8},
                        {0.4, 0.6, 0.6, 0.6, 0.6, 0.8},
                        {0.2, 0.3, 0.4, 0.3, 0.6, 0.6},
                        {0.2, 0.2, 0.2, 0.0, 0.4, 0.0}}));
                letters.put('@', new Letter(1.0, new double[][] {
                        {0.4, 0.7, 0.4, 0.3, 1.0, 0.3},
                        {0.8, 0.7, 1.0, 0.7, 1.0, 0.9},
                        {0.1, 1.0, 0.1, 0.8, 0.8, 0.8},
                        {0.0, 0.1, 0.2, 0.1, 0.2, 0.8},
                        {0.2, 0.2, 0.2, 0.0, 0.9, 0.0}}));
                letters.put('A', new Letter(0.8, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.5, 1.0},
                        {0.5, 1.0, 0.3, 1.0, 0.6, 0.0},
                        {0.2, 0.3, 0.2, 0.1, 0.6, 0.1}}));
                letters.put('B', new Letter(0.6, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 1.0},
                        {0.4, 0.0, 0.6, 0.0, 0.6, 0.8},
                        {0.2, 1.0, 0.2, 0.8, 0.5, 0.8},
                        {0.2, 0.6, 0.2, 0.4, 0.4, 0.4},
                        {0.2, 0.2, 0.2, 0.0, 0.4, 0.0}}));
                letters.put('C', new Letter(0.6, new double[][] {
                        {0.0, 0.2, 0.2, 0.2, 0.2, 0.8},
                        {0.1, 0.2, 0.1, 0.0, 0.6, 0.0},
                        {0.1, 1.0, 0.1, 0.8, 0.6, 0.8}}));
                letters.put('D', new Letter(0.8, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 1.0},
                        {0.6, 0.2, 0.8, 0.2, 0.8, 0.8},
                        {0.2, 0.2, 0.2, 0.0, 0.7, 0.0},
                        {0.2, 1.0, 0.2, 0.8, 0.7, 0.8}}));
                letters.put('E', new Letter(0.6, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 1.0},
                        {0.2, 1.0, 0.2, 0.8, 0.6, 0.8},
                        {0.2, 0.6, 0.2, 0.4, 0.6, 0.4},
                        {0.2, 0.2, 0.2, 0.0, 0.6, 0.0}}));
                letters.put('F', new Letter(0.6, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 1.0},
                        {0.2, 1.0, 0.2, 0.8, 0.6, 0.8},
                        {0.2, 0.6, 0.2, 0.4, 0.6, 0.4}}));
                letters.put('G', new Letter(0.6, new double[][] {
                        {0.0, 0.2, 0.2, 0.2, 0.2, 0.8},
                        {0.1, 0.2, 0.1, 0.0, 0.6, 0.0},
                        {0.1, 1.0, 0.1, 0.8, 0.6, 0.8},
                        {0.4, 0.2, 0.6, 0.2, 0.6, 0.4}}));
                letters.put('H', new Letter(0.7, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 1.0},
                        {0.5, 0.0, 0.7, 0.0, 0.7, 1.0},
                        {0.2, 0.6, 0.2, 0.4, 0.5, 0.4}}));
                letters.put('I', new Letter(0.2, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 1.0}}));
                letters.put('J', new Letter(0.4, new double[][] {
                        {0.0, 1.0, 0.0, 0.8, 0.4, 0.8},
                        {0.0, 0.2, 0.0, 0.0, 0.3, 0.0},
                        {0.2, 0.2, 0.4, 0.2, 0.4, 0.8}}));
                letters.put('K', new Letter(0.7, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 1.0},
                        {0.2, 0.5, 0.4, 0.5, 0.7, 1.0},
                        {0.5, 0.0, 0.7, 0.0, 0.4, 0.5}}));
                letters.put('L', new Letter(0.6, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 1.0},
                        {0.2, 0.2, 0.2, 0.0, 0.6, 0.0}}));
                letters.put('M', new Letter(1.0, new double[][] {
                        {0.2, 0.0, 0.0, 0.0, 0.2, 1.0},
                        {0.4, 1.0, 0.2, 1.0, 0.4, 0.0},
                        {0.6, 0.0, 0.4, 0.0, 0.6, 1.0},
                        {0.8, 1.0, 0.6, 1.0, 0.8, 0.0}}));
                letters.put('N', new Letter(0.7, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 1.0},
                        {0.5, 0.0, 0.7, 0.0, 0.7, 1.0},
                        {0.2, 0.6, 0.2, 0.9, 0.5, 0.4}}));
                letters.put('O', new Letter(0.8, new double[][] {
                        {0.0, 0.2, 0.2, 0.2, 0.2, 0.8},
                        {0.6, 0.2, 0.8, 0.2, 0.8, 0.8},
                        {0.1, 0.2, 0.1, 0.0, 0.7, 0.0},
                        {0.1, 1.0, 0.1, 0.8, 0.7, 0.8}}));
                letters.put('P', new Letter(0.6, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 1.0},
                        {0.2, 1.0, 0.2, 0.8, 0.6, 0.8},
                        {0.2, 0.6, 0.2, 0.4, 0.6, 0.4},
                        {0.4, 0.8, 0.4, 0.6, 0.6, 0.6}}));
                letters.put('Q', new Letter(0.9, new double[][] {
                        {0.0, 0.2, 0.2, 0.2, 0.2, 0.8},
                        {0.6, 0.2, 0.8, 0.2, 0.8, 0.8},
                        {0.1, 0.2, 0.1, 0.0, 0.7, 0.0},
                        {0.1, 1.0, 0.1, 0.8, 0.7, 0.8},
                        {0.5, 0.2, 0.5, 0.4, 0.9, 0.2}}));
                letters.put('R', new Letter(0.6, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 1.0},
                        {0.2, 1.0, 0.2, 0.8, 0.6, 0.8},
                        {0.2, 0.6, 0.2, 0.4, 0.6, 0.4},
                        {0.4, 0.8, 0.4, 0.6, 0.6, 0.6},
                        {0.4, 0.4, 0.2, 0.4, 0.4, 0.0}}));
                letters.put('S', new Letter(0.6, new double[][] {
                        {0.1, 1.0, 0.1, 0.8, 0.6, 0.8},
                        {0.1, 0.6, 0.1, 0.4, 0.5, 0.4},
                        {0.0, 0.2, 0.0, 0.0, 0.5, 0.0},
                        {0.0, 0.6, 0.2, 0.6, 0.2, 0.8},
                        {0.4, 0.2, 0.6, 0.2, 0.6, 0.4}}));
                letters.put('T', new Letter(0.8, new double[][] {
                        {0.0, 1.0, 0.0, 0.8, 0.8, 0.8},
                        {0.3, 0.0, 0.5, 0.0, 0.5, 0.8}}));
                letters.put('U', new Letter(0.8, new double[][] {
                        {0.0, 0.2, 0.2, 0.2, 0.2, 1.0},
                        {0.6, 0.2, 0.8, 0.2, 0.8, 1.0},
                        {0.1, 0.2, 0.1, 0.0, 0.7, 0.0}}));
                letters.put('V', new Letter(0.8, new double[][] {
                        {0.2, 1.0, 0.0, 1.0, 0.3, 0.0},
                        {0.3, 0.0, 0.5, 0.0, 0.8, 1.0}}));
                letters.put('W', new Letter(1.0, new double[][] {
                        {0.2, 1.0, 0.0, 1.0, 0.2, 0.0},
                        {0.2, 0.0, 0.4, 0.0, 0.6, 1.0},
                        {0.6, 1.0, 0.4, 1.0, 0.6, 0.0},
                        {0.8, 0.0, 0.6, 0.0, 0.8, 1.0}}));
                letters.put('X', new Letter(0.8, new double[][] {
                        {0.2, 0.0, 0.0, 0.0, 0.6, 1.0},
                        {0.6, 0.0, 0.8, 0.0, 0.2, 1.0}}));
                letters.put('Y', new Letter(0.8, new double[][] {
                        {0.2, 1.0, 0.0, 1.0, 0.3, 0.4},
                        {0.5, 0.4, 0.3, 0.4, 0.6, 1.0},
                        {0.5, 0.0, 0.3, 0.0, 0.3, 0.4}}));
                letters.put('Z', new Letter(0.8, new double[][] {
                        {0.0, 1.0, 0.0, 0.8, 0.8, 0.8},
                        {0.0, 0.2, 0.0, 0.0, 0.8, 0.0},
                        {0.2, 0.2, 0.0, 0.2, 0.6, 0.8}}));
                letters.put('[', new Letter(0.3, new double[][] {
                        {0.0, 0.2, 0.2, 0.2, 0.2, 0.8},
                        {0.0, 0.2, 0.0, 0.0, 0.3, 0.0},
                        {0.0, 1.0, 0.0, 0.8, 0.3, 0.8}}));
                letters.put('\\', new Letter(0.6, new double[][] {
                        {0.2, 1.0, 0.0, 1.0, 0.4, 0.0}}));
                letters.put(']', new Letter(0.3, new double[][] {
                        {0.1, 0.2, 0.3, 0.2, 0.3, 0.8},
                        {0.0, 0.2, 0.0, 0.0, 0.3, 0.0},
                        {0.0, 1.0, 0.0, 0.8, 0.3, 0.8}}));
                letters.put('^', new Letter(0.6, new double[][] {
                        {0.0, 0.8, 0.0, 0.6, 0.3, 0.8},
                        {0.3, 1.0, 0.3, 0.8, 0.6, 0.6}}));
                letters.put('_', new Letter(1.0, new double[][] {
                        {0.0, 0.2, 0.0, 0.0, 1.0, 0.0}}));
                letters.put('`', new Letter(0.8, new double[][] {
                        {0.2, 1.0, 0.0, 1.0, 0.2, 0.8}}));
                letters.put('{', new Letter(0.4, new double[][] {
                        {0.1, 0.2, 0.3, 0.2, 0.3, 0.8},
                        {0.2, 0.2, 0.2, 0.0, 0.4, 0.0},
                        {0.2, 1.0, 0.2, 0.8, 0.4, 0.8},
                        {0.0, 0.4, 0.1, 0.4, 0.1, 0.6}}));
                letters.put('|', new Letter(0.2, new double[][] {
                        {0.2, 0.0, 0.0, 0.0, 0.0, 1.0}}));
                letters.put('}', new Letter(0.4, new double[][] {
                        {0.1, 0.2, 0.3, 0.2, 0.3, 0.8},
                        {0.0, 0.2, 0.0, 0.0, 0.2, 0.0},
                        {0.0, 1.0, 0.0, 0.8, 0.2, 0.8},
                        {0.3, 0.4, 0.4, 0.4, 0.4, 0.6}}));
                letters.put('~', new Letter(1.0, new double[][] {
                        {0.0, 0.8, 0.0, 0.6, 0.3, 0.8},
                        {0.3, 1.0, 0.3, 0.8, 0.7, 0.6},
                        {0.7, 0.8, 0.7, 0.6, 1.0, 0.8}}));
                letters.put('А', new Letter(0.8, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.5, 1.0},
                        {0.5, 1.0, 0.3, 1.0, 0.6, 0.0},
                        {0.2, 0.3, 0.2, 0.1, 0.6, 0.1}}));
                letters.put('Б', new Letter(0.6, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 1.0},
                        {0.4, 0.0, 0.6, 0.0, 0.6, 0.6},
                        {0.2, 1.0, 0.2, 0.8, 0.6, 0.8},
                        {0.2, 0.6, 0.2, 0.4, 0.4, 0.4},
                        {0.2, 0.2, 0.2, 0.0, 0.4, 0.0}}));
                letters.put('В', new Letter(0.6, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 1.0},
                        {0.4, 0.0, 0.6, 0.0, 0.6, 0.8},
                        {0.2, 1.0, 0.2, 0.8, 0.5, 0.8},
                        {0.2, 0.6, 0.2, 0.4, 0.4, 0.4},
                        {0.2, 0.2, 0.2, 0.0, 0.4, 0.0}}));
                letters.put('Г', new Letter(0.6, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 1.0},
                        {0.2, 1.0, 0.2, 0.8, 0.6, 0.8}}));
                letters.put('Д', new Letter(0.8, new double[][] {
                        {0.2, 1.0, 0.2, 0.8, 0.5, 0.8},
                        {0.1, 0.2, 0.3, 0.2, 0.3, 0.8},
                        {0.5, 0.2, 0.7, 0.2, 0.7, 1.0},
                        {0.0, 0.2, 0.0, 0.0, 0.8, 0.0}}));
                letters.put('Е', new Letter(0.6, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 1.0},
                        {0.2, 1.0, 0.2, 0.8, 0.6, 0.8},
                        {0.2, 0.6, 0.2, 0.4, 0.6, 0.4},
                        {0.2, 0.2, 0.2, 0.0, 0.6, 0.0}}));
                letters.put('Ж', new Letter(1.0, new double[][] {
                        {0.2, 1.0, 0.0, 1.0, 0.2, 0.5},
                        {0.2, 0.0, 0.0, 0.0, 0.2, 0.5},
                        {0.4, 0.0, 0.6, 0.0, 0.6, 1.0},
                        {0.8, 0.0, 1.0, 0.0, 0.8, 0.5},
                        {0.8, 1.0, 1.0, 1.0, 0.8, 0.5}}));
                letters.put('З', new Letter(0.6, new double[][] {
                        {0.0, 1.0, 0.0, 0.8, 0.4, 0.8},
                        {0.0, 0.6, 0.0, 0.4, 0.4, 0.4},
                        {0.0, 0.2, 0.0, 0.0, 0.4, 0.0},
                        {0.4, 0.6, 0.6, 0.6, 0.6, 0.9},
                        {0.4, 0.1, 0.6, 0.1, 0.6, 0.4}}));
                letters.put('И', new Letter(0.7, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 1.0},
                        {0.5, 0.0, 0.7, 0.0, 0.7, 1.0},
                        {0.2, 0.4, 0.2, 0.1, 0.5, 0.6}}));
                letters.put('Й', new Letter(0.7, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 0.8},
                        {0.5, 0.0, 0.7, 0.0, 0.7, 0.8},
                        {0.2, 0.4, 0.2, 0.1, 0.5, 0.4},
                        {0.1, 1.0, 0.1, 0.9, 0.6, 0.9}}));
                letters.put('К', new Letter(0.7, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 1.0},
                        {0.2, 0.5, 0.4, 0.5, 0.7, 1.0},
                        {0.5, 0.0, 0.7, 0.0, 0.4, 0.5}}));
                letters.put('Л', new Letter(0.6, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 0.8},
                        {0.4, 0.0, 0.6, 0.0, 0.6, 1.0},
                        {0.1, 1.0, 0.1, 0.8, 0.4, 0.8}}));
                letters.put('М', new Letter(1.0, new double[][] {
                        {0.2, 0.0, 0.0, 0.0, 0.2, 1.0},
                        {0.4, 1.0, 0.2, 1.0, 0.4, 0.0},
                        {0.6, 0.0, 0.4, 0.0, 0.6, 1.0},
                        {0.8, 1.0, 0.6, 1.0, 0.8, 0.0}}));
                letters.put('Н', new Letter(0.7, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 1.0},
                        {0.5, 0.0, 0.7, 0.0, 0.7, 1.0},
                        {0.2, 0.6, 0.2, 0.4, 0.5, 0.4}}));
                letters.put('О', new Letter(0.8, new double[][] {
                        {0.0, 0.2, 0.2, 0.2, 0.2, 0.8},
                        {0.6, 0.2, 0.8, 0.2, 0.8, 0.8},
                        {0.1, 0.2, 0.1, 0.0, 0.7, 0.0},
                        {0.1, 1.0, 0.1, 0.8, 0.7, 0.8}}));
                letters.put('П', new Letter(0.7, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 1.0},
                        {0.5, 0.0, 0.7, 0.0, 0.7, 1.0},
                        {0.2, 1.0, 0.2, 0.8, 0.5, 0.8}}));
                letters.put('Р', new Letter(0.6, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 1.0},
                        {0.2, 1.0, 0.2, 0.8, 0.6, 0.8},
                        {0.2, 0.6, 0.2, 0.4, 0.6, 0.4},
                        {0.4, 0.8, 0.4, 0.6, 0.6, 0.6}}));
                letters.put('С', new Letter(0.6, new double[][] {
                        {0.0, 0.2, 0.2, 0.2, 0.2, 0.8},
                        {0.1, 0.2, 0.1, 0.0, 0.6, 0.0},
                        {0.1, 1.0, 0.1, 0.8, 0.6, 0.8}}));
                letters.put('Т', new Letter(0.8, new double[][] {
                        {0.0, 1.0, 0.0, 0.8, 0.8, 0.8},
                        {0.3, 0.0, 0.5, 0.0, 0.5, 0.8}}));
                letters.put('У', new Letter(0.6, new double[][] {
                        {0.0, 0.4, 0.2, 0.4, 0.2, 1.0},
                        {0.4, 0.0, 0.6, 0.0, 0.6, 1.0},
                        {0.2, 0.6, 0.2, 0.4, 0.4, 0.4},
                        {0.0, 0.2, 0.0, 0.0, 0.4, 0.0}}));
                letters.put('Ф', new Letter(1.0, new double[][] {
                        {0.0, 0.4, 0.2, 0.4, 0.2, 1.0},
                        {0.4, 0.0, 0.6, 0.0, 0.6, 1.0},
                        {0.2, 0.6, 0.2, 0.4, 0.4, 0.4},
                        {0.2, 1.0, 0.2, 0.8, 0.4, 0.8},
                        {0.6, 0.6, 0.6, 0.4, 0.8, 0.4},
                        {0.6, 1.0, 0.6, 0.8, 0.8, 0.8},
                        {0.8, 0.4, 1.0, 0.4, 1.0, 1.0}}));
                letters.put('Х', new Letter(0.8, new double[][] {
                        {0.2, 0.0, 0.0, 0.0, 0.6, 1.0},
                        {0.6, 0.0, 0.8, 0.0, 0.2, 1.0}}));
                letters.put('Ц', new Letter(0.8, new double[][] {
                        {0.0, 0.2, 0.2, 0.2, 0.2, 1.0},
                        {0.5, 0.2, 0.7, 0.2, 0.7, 1.0},
                        {0.0, 0.2, 0.0, 0.0, 0.8, 0.0}}));
                letters.put('Ч', new Letter(0.6, new double[][] {
                        {0.0, 0.4, 0.2, 0.4, 0.2, 1.0},
                        {0.4, 0.0, 0.6, 0.0, 0.6, 1.0},
                        {0.2, 0.6, 0.2, 0.4, 0.4, 0.4}}));
                letters.put('Ш', new Letter(1.0, new double[][] {
                        {0.0, 0.2, 0.2, 0.2, 0.2, 1.0},
                        {0.4, 0.2, 0.6, 0.2, 0.6, 1.0},
                        {0.8, 0.2, 1.0, 0.2, 1.0, 1.0},
                        {0.0, 0.2, 0.0, 0.0, 1.0, 0.0}}));
                letters.put('Щ', new Letter(1.0, new double[][] {
                        {0.0, 0.2, 0.2, 0.2, 0.2, 1.0},
                        {0.3, 0.2, 0.5, 0.2, 0.5, 1.0},
                        {0.6, 0.2, 0.8, 0.2, 0.8, 1.0},
                        {0.0, 0.2, 0.0, 0.0, 1.0, 0.0}}));
                letters.put('Ъ', new Letter(0.8, new double[][] {
                        {0.0, 1.0, 0.0, 0.8, 0.2, 0.8},
                        {0.2, 0.0, 0.4, 0.0, 0.4, 1.0},
                        {0.4, 0.6, 0.4, 0.4, 0.8, 0.4},
                        {0.4, 0.2, 0.4, 0.0, 0.8, 0.0},
                        {0.6, 0.2, 0.8, 0.2, 0.8, 0.4}}));
                letters.put('Ы', new Letter(0.9, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 1.0},
                        {0.2, 0.6, 0.2, 0.4, 0.6, 0.4},
                        {0.2, 0.2, 0.2, 0.0, 0.6, 0.0},
                        {0.4, 0.2, 0.6, 0.2, 0.6, 0.4},
                        {0.7, 0.0, 0.9, 0.0, 0.9, 1.0}}));
                letters.put('Ь', new Letter(0.6, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 1.0},
                        {0.2, 0.6, 0.2, 0.4, 0.6, 0.4},
                        {0.2, 0.2, 0.2, 0.0, 0.6, 0.0},
                        {0.4, 0.2, 0.6, 0.2, 0.6, 0.4}}));
                letters.put('Э', new Letter(0.6, new double[][] {
                        {0.0, 1.0, 0.0, 0.8, 0.4, 0.8},
                        {0.0, 0.6, 0.0, 0.4, 0.4, 0.4},
                        {0.0, 0.2, 0.0, 0.0, 0.4, 0.0},
                        {0.4, 0.1, 0.6, 0.1, 0.6, 0.9}}));
                letters.put('Ю', new Letter(1.0, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 1.0},
                        {0.4, 0.0, 0.6, 0.0, 0.6, 1.0},
                        {0.8, 0.0, 1.0, 0.0, 1.0, 1.0},
                        {0.2, 0.6, 0.2, 0.4, 0.4, 0.4},
                        {0.6, 1.0, 0.6, 0.8, 0.8, 0.8},
                        {0.6, 0.2, 0.6, 0.0, 0.8, 0.0}}));
                letters.put('Я', new Letter(0.6, new double[][] {
                        {0.0, 0.4, 0.2, 0.4, 0.2, 1.0},
                        {0.4, 0.0, 0.6, 0.0, 0.6, 1.0},
                        {0.2, 0.6, 0.2, 0.4, 0.4, 0.4},
                        {0.2, 0.0, 0.0, 0.0, 0.2, 0.4},
                        {0.2, 1.0, 0.2, 0.8, 0.4, 0.8}}));
                letters.put('Ё', new Letter(0.6, new double[][] {
                        {0.0, 0.0, 0.2, 0.0, 0.2, 0.8},
                        {0.2, 0.8, 0.2, 0.6, 0.6, 0.6},
                        {0.2, 0.5, 0.2, 0.3, 0.6, 0.3},
                        {0.2, 0.2, 0.2, 0.0, 0.6, 0.0},
                        {0.0, 1.0, 0.0, 0.9, 0.2, 0.9},
                        {0.4, 1.0, 0.4, 0.9, 0.6, 0.9}}));
        }
        
        /** Вычисление набора аффинных преобразований по строке */
        public SystemOfTransforms calculate(String str)
        {
                // Считаем количество необходимых преобразований и длину строки
                double width        = 0.0;
                int countTransforms = 0;
                for (int i = 0; i < str.length(); ++i)
                {
                        if (letters.get(str.charAt(i)) == null)
                                continue;
                        countTransforms += letters.get(str.charAt(i)).triangles.length;
                        width           += letters.get(str.charAt(i)).width + STEP;
                        
                }
                width -= STEP;
                
                //Вычисляем сами преобразования
                Transform[] transforms = new Transform[countTransforms];
                int         j          = 0;
                double[]    triangle;
                double      shift      = 0.0;
                double      sump       = 0.0;
                int         count;
                for (int i = 0; i < str.length(); ++i)
                {
                        if (letters.get(str.charAt(i)) == null)
                                continue;
                        count = letters.get(str.charAt(i)).triangles.length;
                        for (int k = 0; k < count; ++k)
                        {
                                triangle = letters.get(str.charAt(i)).triangles[k];
                                transforms[j]   = new Transform();
                                transforms[j].a = 1.0 / width * (-triangle[2] + triangle[4]);
                                transforms[j].b = triangle[0] - triangle[2];
                                transforms[j].e = 1.0 / width * (triangle[2] + shift);
                                transforms[j].c = 1.0 / width * (-triangle[3] + triangle[5]);
                                transforms[j].d = triangle[1] - triangle[3];
                                transforms[j].f = 1.0 / width * triangle[3];
                                sump += Math.abs(transforms[j].a * transforms[j].d - transforms[j].b * transforms[j].c);
                                ++j;
                        }
                        shift += letters.get(str.charAt(i)).width + STEP;
                }
                
                // Расчитываем веротностные коэффициенты
                for (int i = 0; i < countTransforms; ++i)
                {
                        transforms[i].p = Math.abs(transforms[i].a * transforms[i].d -
                                transforms[i].b * transforms[i].c) / sump;
                }
                
                return new SystemOfTransforms(transforms, 1 / width);
        }
        
	/** Отступ между буквами */
        private final double STEP = 0.2;         

        private class Letter
        {
		/** Ширина буквы */
		public double     width;     
		
		/** Набор треугольников, описывающих букву */
		public double[][] triangles;                 

                Letter(double width, double[][] triangles)
                {
                        this.width = width;
                        this.triangles = triangles;
                }
        }
        
	/** Таблица символ <--> набор преобразований */
        private Map<Character, Letter> letters = new HashMap<Character, Letter>(); 
}

